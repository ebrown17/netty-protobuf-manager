buildscript {
  repositories {
    maven {
      url "https://plugins.gradle.org/m2/"
    }
  }
  dependencies {
    classpath "gradle.plugin.com.github.spotbugs:spotbugs-gradle-plugin:1.6.5"
  }
}

apply plugin: "com.github.spotbugs"
apply plugin: 'groovy'
apply plugin: 'application'
apply plugin: 'idea'
apply plugin: 'pmd'

mainClassName = "server.Server"

repositories { mavenCentral() }

dependencies {
  compile 'com.google.protobuf:protobuf-java:3.3.1'
  compile 'org.codehaus.groovy:groovy-all:2.4.12'
  compile 'io.netty:netty-all:4.1.14.Final'
  compile 'org.slf4j:slf4j-api:1.7.25'
  compile 'ch.qos.logback:logback-classic:1.2.3'
  testCompile 'org.spockframework:spock-core:1.1-groovy-2.4'
  
}

spotbugs {
	sourceSets = [sourceSets.main]
 	ignoreFailures = true
	effort = "max"
	reportLevel = "low"
	excludeFilter = file("src/main/resources/spotbugs-exclude.xml")
}

spotbugsMain {
	reports.xml.enabled = false
	reports.html.enabled = true
}

pmd {
  ignoreFailures = true
  sourceSets = [sourceSets.main]
  ruleSets = ["java-basic","java-braces","java-clone",
              "java-codesize",//"java-comments",
              //"java-controversial",//"java-coupling",
              "java-design","java-empty","java-finalizers",
              "java-imports","java-j2ee",//"java-javabeans",
              "java-junit","java-logging-jakarta-commons",
              "java-logging-java",//"java-naming",
              "java-optimizations","java-strictexception",
              "java-strings","java-sunsecure",
              "java-typeresolution","java-unnecessary",
              "java-unusedcode" ]

}

pmdMain {
    excludes = ["**/ProtoMessages.java"]
}

task asServer(type: JavaExec) {
  classpath = sourceSets.test.runtimeClasspath + files('config')
  main = "src.test.java.server.ServerTest"
}

task asClient(type: JavaExec) {
  classpath sourceSets.test.runtimeClasspath + files('config')
  main = "src.test.java.client.ClientTest"
}
